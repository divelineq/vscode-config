{
	"react function component": {
		"prefix": "rfc",
		"body": [
			"export default function ${TM_FILENAME_BASE}() {",
			"	return (",
			"		<div>",
			"			<h1>${TM_FILENAME_BASE}</h1>$1",
			"		</div>",
			"	)",
			"}",
			""
		],
		"description": "react function component"
	},
	"fetch request snippet": {
		"prefix": "ftc",
		"body": [
			"const response = fetch(\"$1\").then((response) => response.json());"
		],
		"description": "fetch request snippet"
	},
	"useEffect fetch snippet": {
		"prefix": "ueftc",
		"body": [
			"useEffect$3(() => {",
			"	const response = fetch('$1').then(",
			"		(response) => response.json(),",
			"	)",
			"}, [$2])"
		],
		"description": "use effect fetch request snippet"
	},
	"useDipatch snippets": {
		"prefix": "udp",
		"body": ["const dispatch = useDispatch$1()"],
		"description": "useDipatch snippets"
	},
	"useNavigate snippets": {
		"prefix": "ung",
		"body": ["const navigate = useNavigate$1()"],
		"description": "useNavigate snippets"
	},
	"useSelector snippets": {
		"prefix": "usl",
		"body": ["const ${1:name} = useSelector$3((state) => state.$2)"],
		"description": "useSelector snippets"
	},
	"useState snippets": {
		"prefix": "ust",
		"body": ["const [${1:name}, ${2:setName}] = useState($3)"],
		"description": "useState snippets"
	},
	"configureStore snippets": {
		"prefix": "cost",
		"body": [
			"import { configureStore } from '@reduxjs/toolkit'",
			"",
			"export default configureStore({",
			"	reducer: {",
			"		${1:name}: ${2:nameReducer}",
			"	},",
			"})"
		],
		"description": "configureStore snippets"
	},
	"createSlice snippets": {
		"prefix": "crsl",
		"body": [
			"import { createSlice } from '@reduxjs/toolkit'",
			"",
			"export const ${TM_FILENAME_BASE} = createSlice({",
			"	name: '${1:name}',",
			"	initialState: {},",
			"	reducers: {},",
			"})",
			"",
			"export const { } = ${TM_FILENAME_BASE}.actions",
			"export default ${TM_FILENAME_BASE}.reducer"
		],
		"description": "createSlice snippets"
	},
	"useForm snippets": {
		"prefix": "ufo",
		"body": [
			"const { register, handleSubmit, formState } = useForm$1({",
			"	mode: 'onChange',",
			"	defaultValues: {},",
			"})"
		],
		"description": "useForm snippets"
	},
	"useParams snippets": {
		"prefix": "upa",
		"body": ["let {${1:id}} = useParams$2();"],
		"description": "useParams snippets"
	}
}
